/*
* style2_pins.h
*
* Pin Macro Definitions
*
* Created: 07/29/2014 02:11:38 PM
*  Author: kyle.roberts
*
* This file has been generated by the CreatePins() Python Script
*  any modifications to this file will be overwritten by the script.
*  To run the script:
*   1. Create a comma separate file .csv containing pins in the following format
*      PIN_NAME_STRING,PORT_LETTER,RELATIVE_PIN_NUMBER,IN or OUT or NA
*      Ex. POWER_ON_BUTTON,A,0,IN
*      Use IN for inputs, OUT for outputs, and NA for not used or not used as digital IO
*      Only 1 pin description per line!!!
*   2. Run the CreatePins() python script contained in Fireball\Software Assembly\Utilities\portPinConfigGenerator.py
*      in a python shell
*   3. Provide full path to pin description .csv for input file
*   4. Provide file name for output file
*   5. Script should output DONE when completed successful
*/

#ifndef STYLE2_PINS_PROTO_H
#define STYLE2_PINS_PROTO_H

#include <avr/io.h>

#define HIGH				1
#define LOW					0

/****************************************************************************
 Pin Configuration
****************************************************************************/

// PA0 - WIFI_BUT - INPUT
#define WIFI_BUT_DDR            DDRA
#define WIFI_BUT_PINR           PINA
#define WIFI_BUT_PORTR          PORTA
#define WIFI_BUT_VALUE          ((PINA>>PINA0)&1)
#define WIFI_BUT_INT            PCINT0 
#define WIFI_BUT_PCMSK          PCMSK0 
#define WIFI_BUT                0

// PA1 - WPS_BUT - INPUT
#define WPS_BUT_DDR             DDRA
#define WPS_BUT_PINR            PINA
#define WPS_BUT_PORTR           PORTA
#define WPS_BUT_VALUE           ((PINA>>PINA1)&1)
#define WPS_BUT_INT             PCINT1 
#define WPS_BUT_PCMSK           PCMSK0 
#define WPS_BUT                 1

// PA2 - EXT_ANT_EN - INPUT
#define EXT_ANT_EN_DDR          DDRA
#define EXT_ANT_EN_PINR         PINA
#define EXT_ANT_EN_PORTR        PORTA
#define EXT_ANT_EN_VALUE        ((PINA>>PINA2)&1)
#define EXT_ANT_EN_INT          PCINT2 
#define EXT_ANT_EN_PCMSK        PCMSK0 
#define EXT_ANT_EN              2

// PA3 - LAN_EN - OUTPUT
#define LAN_EN_DDR              DDRA
#define LAN_EN_PORTR            PORTA
#define LAN_EN                  PORTA3

// PA4 - MODE_LED_R - OUTPUT
#define MODE_LED_R_DDR          DDRA
#define MODE_LED_R_PORTR        PORTA
#define MODE_LED_R              PORTA4

// PA5 - MODE_LED_G - OUTPUT
#define MODE_LED_G_DDR          DDRA
#define MODE_LED_G_PORTR        PORTA
#define MODE_LED_G              PORTA5

// PA6 - MODE_LED_B - OUTPUT
#define MODE_LED_B_DDR          DDRA
#define MODE_LED_B_PORTR        PORTA
#define MODE_LED_B              PORTA6

// PB1 - CPU_EN - OUTPUT
#define CPU_EN_DDR              DDRB
#define CPU_EN_PORTR            PORTB
#define CPU_EN                  PORTB1

// PB2 - RST_BTN - INPUT
#define RST_BTN_DDR             DDRB
#define RST_BTN_PINR            PINB
#define RST_BTN_PORTR           PORTB
#define RST_BTN_VALUE           ((PINB>>PINB2)&1)
#define RST_BTN_INT             PCINT10 
#define RST_BTN_PCMSK           PCMSK1 
#define RST_BTN                 2

// PB3 - FAN_CTRL2 - OUTPUT
#define FAN_CTRL2_DDR           DDRB
#define FAN_CTRL2_PORTR         PORTB
#define FAN_CTRL2               PORTB3

// PB4 - FAN_CTRL1 - OUTPUT
#define FAN_CTRL1_DDR           DDRB
#define FAN_CTRL1_PORTR         PORTB
#define FAN_CTRL1               PORTB4

// PC2 - SIG1_LED - OUTPUT
#define SIG1_LED_DDR            DDRC
#define SIG1_LED_PORTR          PORTC
#define SIG1_LED                PORTC2

// PC3 - SIG3_LED - OUTPUT
#define SIG3_LED_DDR            DDRC
#define SIG3_LED_PORTR          PORTC
#define SIG3_LED                PORTC3

// PC4 - SIG2_LED - OUTPUT
#define SIG2_LED_DDR            DDRC
#define SIG2_LED_PORTR          PORTC
#define SIG2_LED                PORTC4

// PC5 - SIG4_LED - OUTPUT
#define SIG4_LED_DDR            DDRC
#define SIG4_LED_PORTR          PORTC
#define SIG4_LED                PORTC5

// PC6 - SIG5_LED - OUTPUT
#define SIG5_LED_DDR            DDRC
#define SIG5_LED_PORTR          PORTC
#define SIG5_LED                PORTC6

// PC7 - LED4_0 - INPUT
#define LED4_0_DDR              DDRC
#define LED4_0_PINR             PINC
#define LED4_0_PORTR            PORTC
#define LED4_0_VALUE            ((PINC>>PINC7)&1)
#define LED4_0_INT              PCINT23 
#define LED4_0_PCMSK            PCMSK2 
#define LED4_0                  7

// PD0 - PWR_LED - OUTPUT
#define PWR_LED_DDR             DDRD
#define PWR_LED_PORTR           PORTD
#define PWR_LED                 PORTD0

// PD2 - WIRELINE_LED - OUTPUT
#define WIRELINE_LED_DDR        DDRD
#define WIRELINE_LED_PORTR      PORTD
#define WIRELINE_LED            PORTD2

// PD3 - WIRELESS_LED - OUTPUT
#define WIRELESS_LED_DDR        DDRD
#define WIRELESS_LED_PORTR      PORTD
#define WIRELESS_LED            PORTD3

// PD4 - PWR_ON - INPUT
#define PWR_ON_DDR              DDRD
#define PWR_ON_PINR             PIND
#define PWR_ON_PORTR            PORTD
#define PWR_ON_VALUE            ((PIND>>PIND4)&1)
#define PWR_ON_INT              PCINT28 
#define PWR_ON_PCMSK            PCMSK3 
#define PWR_ON                  4

// PD5 - WIFI_LED - OUTPUT
#define WIFI_LED_DDR            DDRD
#define WIFI_LED_PORTR          PORTD
#define WIFI_LED                PORTD5

// PD6 - WPS_LED - OUTPUT
#define WPS_LED_DDR             DDRD
#define WPS_LED_PORTR           PORTD
#define WPS_LED                 PORTD6

// DDRA Setup Macro
#define DDRA_SETUP()			DDRA = 0x78
// DDRB Setup Macro
#define DDRB_SETUP()			DDRB = 0x1a
// DDRC Setup Macro
#define DDRC_SETUP()			DDRC = 0x7c
// DDRD Setup Macro
#define DDRD_SETUP()			DDRD = 0x6d
#endif /* STYLE2_PINS_H */
